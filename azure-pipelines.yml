trigger:
  branches:
    include:
      - main

variables:
  azureSubscription: 'azure-resource-connection'
  acrLoginServer: 'bratvaa.azurecr.io'
  imageName: 'nodejs-app'
  aksResourceGroup: 'devops-nodejs-rg'
  aksClusterName: 'devopsNodejsCluster'

stages:
  - stage: Build
    jobs:
      - job: BuildAndPush
        pool:
          name: 'bratva'
         
        steps:
          - task: NodeTool@0
            inputs:
              versionSpec: '18.x'
            displayName: 'Install Node.js'

          - script: |
              npm install
            displayName: 'Build nodejs-app'
            workingDirectory: node-app


          - task: Docker@2
            inputs:
              command: buildAndPush
              repository: $(acrLoginServer)/$(imageName)
              dockerfile: node-app/Dockerfile
              buildContext: node-app         
              containerRegistry: acr-docker-connection          # <-- add this line
              tags: |
                latest
                $(Build.BuildId)
            displayName: 'Build and Push Docker image to ACR'
  - stage: Deploy
    dependsOn: Build
    jobs:
      - job: DeployToAKS
        pool:
          name: 'bratva'
        steps:
          - task: AzureCLI@2
            inputs:
              azureSubscription: $(azureSubscription)
              scriptType: bash
              scriptLocation: inlineScript
              inlineScript: |
                az aks get-credentials --resource-group $(aksResourceGroup) --name $(aksClusterName) --overwrite-existing
            displayName: 'Get AKS Credentials'

          - task: Bash@3
            displayName: 'Update image tag in deployment.yaml'
            inputs:
              targetType: inline
              script: |
                sed -i "s|bratvaa.azurecr.io/nodejs-app:.*|bratvaa.azurecr.io/nodejs-app:$(Build.BuildId)|" terraform/manifests/deployment.yaml
          - task: Kubernetes@1
            displayName: 'Deploy to AKS'
            inputs:
              connectionType: 'Azure Resource Manager'
              azureSubscriptionEndpoint: $(azureSubscription)
              azureResourceGroup: $(aksResourceGroup)
              kubernetesCluster: $(aksClusterName)
              namespace: default
              command: apply
              useConfigurationFile: true
              configuration: 'terraform/manifests/' 
